---
- name: Create kube directory
  ansible.builtin.file:
    path: "~/.kube"
    state: directory
    mode: '0700'

- name: Template admin.conf to kubeconfig
  ansible.builtin.template:
    src: "admin.conf.j2"
    dest: "~/.kube/config"
    mode: '0600'

- name: Print kubeconfig content for debugging
  ansible.builtin.command: cat ~/.kube/config
  register: kubeconfig_content
  changed_when: false

- name: Show kubeconfig content
  ansible.builtin.debug:
    var: kubeconfig_content.stdout_lines
    verbosity: 1

- name: Ensure namespace exists
  kubernetes.core.k8s:
    state: present
    kubeconfig: "~/.kube/config"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ CI_ENVIRONMENT_SLUG }}"

- name: Set registry auth variable
  ansible.builtin.set_fact:
    auth_string: "{{ CI_REGISTRY_USER }}:{{ CI_REGISTRY_PASSWORD }}"

- name: Create registry auth data structure
  ansible.builtin.set_fact:
    registry_auth_data:
      auths:
        "{{ CI_REGISTRY }}":
          username: "{{ CI_REGISTRY_USER }}"
          password: "{{ CI_REGISTRY_PASSWORD }}"
          auth: "{{ auth_string | b64encode }}"

- name: Convert registry auth to JSON
  ansible.builtin.set_fact:
    registry_auth: "{{ registry_auth_data | to_json }}"

- name: Create registry credentials secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "~/.kube/config"
    definition: "{{ lookup('template', 'registry-secret.yml.j2') | from_yaml }}"

- name: Create registry credentials secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "~/.kube/config"
    definition: "{{ lookup('template', 'registry-secret.yml.j2') | from_yaml }}"

- name: Create SSL certificate secret
  kubernetes.core.k8s:
    state: present
    kubeconfig: "~/.kube/config"
    definition: "{{ lookup('template', 'cert-secret.yml.j2') | from_yaml }}"
