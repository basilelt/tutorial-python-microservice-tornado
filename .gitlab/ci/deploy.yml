deploy_production:
  stage: deploy
  image: alpine/ansible:2.18.1
  variables:
    TAG: $CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG'
  before_script:
    - apk add --no-cache python3 py3-kubernetes
    - ansible-galaxy collection install kubernetes.core
    - chmod -R 755 .gitlab/ansible
  script:
    - cd ./gitlab/ansible
    - ansible-playbook site.yml --tags production
  environment:
    name: production
    url: http://$KUBE_DOMAIN

deploy:
  stage: deploy
  image: alpine/ansible:2.18.1
  variables:
    TAG: $CI_COMMIT_REF_SLUG
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      variables:
        ENVIRONMENT: integration
    - if: '$CI_COMMIT_BRANCH == "master"'
      variables:
        ENVIRONMENT: preproduction
  before_script:
    - apk add --no-cache python3 py3-kubernetes
    - ansible-galaxy collection install kubernetes.core
    - chmod -R 755 .gitlab/ansible
  script:
    - cd ./gitlab/ansible
    - ansible-playbook site.yml --tags "$ENVIRONMENT"
  environment:
    name: $ENVIRONMENT
    url: http://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN

deploy_review:
  stage: deploy
  image: alpine/ansible:2.18.1
  variables:
    TAG: $CI_COMMIT_REF_SLUG
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feat-/'
  before_script:
    - apk add --no-cache python3 py3-kubernetes
    - ansible-galaxy collection install kubernetes.core
    - chmod -R 755 .gitlab/ansible
  script:
    - cd ./gitlab/ansible
    - ansible-playbook site.yml --tags review
  environment:
    name: review/$TAG
    url: http://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
    on_stop: stop_review

stop_review:
  stage: deploy
  image: alpine/ansible:2.18.1
  variables:
    TAG: $CI_COMMIT_REF_SLUG
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^feat-/'
  before_script:
    - apk add --no-cache python3 py3-kubernetes
    - ansible-galaxy collection install kubernetes.core
    - chmod -R 755 .gitlab/ansible
  script:
    - cd ./gitlab/ansible
    - ansible-playbook reset.yml --tags review
  environment:
    name: review/$TAG
    action: stop
  when: manual
